FROM elixir:1.17.2

WORKDIR /tanks_elixir

RUN apt-get update
# RUN curl -sL https://deb.nodesource.com/setup_16.x | bash -&&\
#   apt-get install -y nodejs
# # для хот релоада в дев окружении
RUN apt-get install -y inotify-tools

RUN mix local.hex --force && mix local.rebar --force
RUN mix archive.install hex phx_new 1.7.14 --force


# setup
# docker-compose run -f docker-compose.dev.yml <compose_service_name> mix phx.new . --no-gettext --app <app_name>

# setup db
# docker-compose run <compose_service_name> mix ecto.create --rm

# настройка конфигов
# в конфиге dev.exs заменить http: [ip: {127, 0, 0, 1}, port: 4000] на http: [ip: {0, 0, 0, 0}, port: 4000]
# в хосте конфигов БД заменить localhost на "postgres"

# start with active shell
# создать новый контейнер для каждого запуска и удалить после завершения
# docker-compose run --rm  --service-ports <compose_service_name> iex -S mix run --no-halt
# or
# перейти в запущенный контейнер и выполнить команду запуска сервиса
# такой подход используется чтобы все настройки, в том числе локальные файлы .elixir_ls хранились в контейнере
# затем можно подключиться в VSCode к контейнеру и работать полностью внутри контейнера
# docker-compose up -d
# docker-compose exec <compose_service_name> iex -S mix run --no-halt

# run tests
# создать новый контейнер для запуска тестов и удалить после завершения
# docker-compose run --rm -e MIX_ENV=test <compose_service_name> mix test
# or
# перейти в запущенный контейнер и запустить тесты
# docker-compose exec -e MIX_ENV=test <compose_service_name> mix test

